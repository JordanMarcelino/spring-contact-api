openapi: "3.0.2"
info:
  title: Contact Management RESTful API
  description: OPEN API Documentation for Spring Boot Contact Management Application
  version: "1.0.0-SNAPSHOT"
servers:
  - url: http://localhost:8000
    description: Development server (local)
paths:
  /api/auth/register:
    post:
      description: Register new user account
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/User"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /api/auth/login:
    post:
      description: Login with created account
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success register new user account
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /api/auth/logout:
    post:
      description: Logout
      security:
        - apiKey: [ ]
      tags:
        - users
      responses:
        '200':
          description: Success logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/users/me:
    get:
      description: Get user profile
      security:
        - apiKey: [ ]
      tags:
        - users
      responses:
        '200':
          description: Success get user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/User"
  /api/users/{userId}:
    parameters:
      - name: userId
        required: true
        in: path
        schema:
          type: number
    patch:
      description: Update user profile
      security:
        - apiKey: [ ]
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success update user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/User"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
    delete:
      description: Delete user account
      security:
        - apiKey: [ ]
      tags:
        - users
      responses:
        '200':
          description: Success delete user account
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/contacts:
    get:
      parameters:
        - name: name
          description: Contact first name or last name
          in: query
          schema:
            type: string
        - name: email
          description: Contact email
          in: query
          schema:
            type: string
        - name: phone
          description: Contact phone number
          in: query
          schema:
            type: string
        - name: page
          description: Page number
          in: query
          schema:
            type: number
        - name: size
          description: Page size
          in: query
          schema:
            type: number
      description: Search contacts
      security:
        - apiKey: [ ]
      tags:
        - contacts
      responses:
        '200':
          description: Success search contacts
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Contact"
                  paging:
                    $ref: "#/components/schemas/PageMetaData"
    post:
      description: Create new contacts
      security:
        - apiKey: [ ]
      tags:
        - contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateContact"
      responses:
        '201':
          description: Success create new contact
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Contact"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /api/contacts/{contactId}:
    parameters:
      - name: contactId
        required: true
        in: path
        schema:
          type: number
    get:
      description: Get contact detail
      security:
        - apiKey: [ ]
      tags:
        - contacts
      responses:
        '200':
          description: Success get contact detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
    put:
      description: Update contact
      security:
        - apiKey: [ ]
      tags:
        - contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateContact"
      responses:
        '200':
          description: Success update contact
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Contact"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
    delete:
      description: Delete contact
      security:
        - apiKey: [ ]
      tags:
        - contacts
      responses:
        '200':
          description: Success delete contact
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string


components:
  securitySchemes:
    apiKey:
      type: apiKey
      name: X-API-KEY
      in: cookie
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
        username:
          type: string
        name:
          type: string
    CreateOrUpdateContact:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
    Contact:
      type: object
      properties:
        id:
          type: number
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
    PageMetaData:
      type: object
      properties:
        totalPage:
          type: number
        size:
          type: number
        hasNext:
          type: boolean
    BadRequest:
      type: object
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string